buildscript {
    repositories { mavenCentral() }
    dependencies { classpath 'com.android.tools.build:gradle:0.7+' }
}

apply plugin: 'android'

repositories {
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
}

android {
    compileSdkVersion 17
    buildToolsVersion "19.0.3"
}

configurations {
    apt
}

dependencies {
    ext {
        androidAnnotationsVersion = '3.1-SNAPSHOT'
    }

    compile 'com.android.support:support-v4:19.1.0'
    compile 'com.android.support:appcompat-v7:19.1.0'
    compile "org.androidannotations:androidannotations-api:$androidAnnotationsVersion"
    apt "org.androidannotations:androidannotations:$androidAnnotationsVersion"
}

def getSourceSetName(variant) {
    return new File(variant.dirName).getName();
}

//android.applicationVariants.each to  android.applicationVariants.all
android.applicationVariants.all { variant ->
    def aptOutputDir = project.file("build/source/apt")
    def aptOutput = new File(aptOutputDir, variant.dirName)
    println "****************************"
    println "variant: ${variant.name}"
    println "manifest:  ${variant.processResources.manifestFile}"
    println "aptOutput:  ${aptOutput}"
    println "****************************"

    android.sourceSets[getSourceSetName(variant)].java.srcDirs += aptOutput.getPath()

    variant.javaCompile.options.compilerArgs += [
            '-processorpath', configurations.apt.getAsPath(),
            '-processor', 'org.androidannotations.AndroidAnnotationProcessor',
            '-AandroidManifestFile=' + variant.processResources.manifestFile,
            '-s', aptOutput
    ]

    variant.javaCompile.source = variant.javaCompile.source.filter { p ->
        return !p.getPath().startsWith(aptOutputDir.getPath())
    }

    variant.javaCompile.doFirst {
        aptOutput.mkdirs()
    }
}